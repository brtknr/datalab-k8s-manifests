apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: infrastructure-api-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.infrastructureApi.replicas }}
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: infrastructure-api
        environment: {{ .Values.environment }}
      annotations:
        container.apparmor.security.beta.kubernetes.io/infrastructure-api: {{ .Values.infrastructureApi.policy }}
    spec:
      serviceAccountName: infrastructure-service-account
      containers:
        - name: infrastructure-api
          image: {{ .Values.infrastructureApi.imageName }}:{{ .Values.datalabVersion }}
          imagePullPolicy: IfNotPresent
          env:
            - name: INFRASTRUCTURE_API_PORT
              value: '8000'
            - name: KUBERNETES_MASTER_URL
              value: http://{{ .Values.kubernetesMasterHostName }}
            - name: VAULT_API
              value: http://vault-service:8200
            - name: VAULT_APP_ROLE
              valueFrom:
                secretKeyRef:
                  name: vault-management-secret
                  key: secret
            - name: KUBERNETES_NAMESPACE
              value: {{ .Values.namespace }}
            - name: AUTH_SIGNIN_URL
              value: {{ .Values.authSignin }}
            - name: AUTHORISATION_SERVICE
              value: {{ .Values.authService }}
            - name: DATABASE_HOST
              value: mongo-service
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /status
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
        - name: infrastructure-watcher
          image: {{ .Values.infrastructureApi.imageName }}:{{ .Values.datalabVersion }}
          imagePullPolicy: IfNotPresent
          command: ["node", "watcher.js"]
          env:
            - name: KUBERNETES_MASTER_URL
              value: http://{{ .Values.kubernetesMasterHostName }}
            - name: KUBERNETES_NAMESPACE
              value: {{ .Values.namespace }}
            - name: DATABASE_HOST
              value: mongo-service
        - name: kubectl
          image: {{ .Values.kubectl.imageName }}:{{ .Values.kubectl.version }}
          imagePullPolicy: IfNotPresent
          command: ['kubectl', 'proxy']
          ports:
            - containerPort: 8001
---
apiVersion: v1
kind: Service
metadata:
  name: infrastructure-api-service
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  selector:
    app: infrastructure-api
  type: NodePort
